diff --git a/wheel/bdist_wheel.py b/wheel/bdist_wheel.py
index 5dee1b7..de7af43 100644
--- a/wheel/bdist_wheel.py
+++ b/wheel/bdist_wheel.py
@@ -11,6 +11,7 @@ import stat
 import sys
 import re
 import warnings
+import struct
 from collections import OrderedDict
 from email.generator import Generator
 from distutils.core import Command
@@ -46,7 +47,7 @@ def get_platform(archive_root):
     result = distutils.util.get_platform()
     if result.startswith("macosx") and archive_root is not None:
         result = calculate_macosx_platform_tag(archive_root, result)
-    if result == "linux_x86_64" and sys.maxsize == 2147483647:
+    if result == "linux_x86_64" and struct.calcsize("P") == 4:
         # pip pull request #3497
         result = "linux_i686"
     return result
@@ -93,6 +94,9 @@ def get_abi_tag():
         abi = '%s%s%s%s%s' % (impl, tags.interpreter_version(), d, m, u)
     elif soabi and soabi.startswith('cpython-'):
         abi = 'cp' + soabi.split('-')[1]
+    elif soabi and impl == "graalpy":
+        abi = "-".join(soabi.split("-")[:3])
+        abi = abi.replace(".", "_").replace("-", "_")
     elif soabi:
         abi = soabi.replace('.', '_').replace('-', '_')
     else:
@@ -251,7 +255,7 @@ class bdist_wheel(Command):
                 # modules, use the default platform name.
                 plat_name = get_platform(self.bdist_dir)
 
-            if plat_name in ('linux-x86_64', 'linux_x86_64') and sys.maxsize == 2147483647:
+            if plat_name in ('linux-x86_64', 'linux_x86_64') and struct.calcsize("P") == 4:
                 plat_name = 'linux_i686'
 
         plat_name = plat_name.lower().replace('-', '_').replace('.', '_')
diff --git a/wheel/vendored/packaging/tags.py b/wheel/vendored/packaging/tags.py
index ee529c8..b8c1b6f 100644
--- a/wheel/vendored/packaging/tags.py
+++ b/wheel/vendored/packaging/tags.py
@@ -56,7 +56,7 @@ INTERPRETER_SHORT_NAMES = {
 }  # type: Dict[str, str]
 
 
-_32_BIT_INTERPRETER = sys.maxsize <= 2 ** 32
+_32_BIT_INTERPRETER = struct.calcsize("P") == 4
 
 
 class Tag(object):
@@ -270,10 +270,44 @@ def cpython_tags(
 
 
 def _generic_abi():
-    # type: () -> Iterator[str]
-    abi = sysconfig.get_config_var("SOABI")
-    if abi:
-        yield _normalize_string(abi)
+    """
+    Return the ABI tag based on EXT_SUFFIX.
+    """
+    # The following are examples of `EXT_SUFFIX`.
+    # We want to keep the parts which are related to the ABI and remove the
+    # parts which are related to the platform:
+    # - linux:   '.cpython-310-x86_64-linux-gnu.so' => cp310
+    # - mac:     '.cpython-310-darwin.so'           => cp310
+    # - win:     '.cp310-win_amd64.pyd'             => cp310
+    # - win:     '.pyd'                             => cp37 (uses _cpython_abis())
+    # - pypy:    '.pypy38-pp73-x86_64-linux-gnu.so' => pypy38_pp73
+    # - graalpy: '.graalpy-38-native-x86_64-darwin.dylib'
+    #                                               => graalpy_38_native
+
+    ext_suffix = _get_config_var("EXT_SUFFIX", warn=True)
+    if not isinstance(ext_suffix, str) or ext_suffix[0] != ".":
+        raise SystemError("invalid sysconfig.get_config_var('EXT_SUFFIX')")
+    parts = ext_suffix.split(".")
+    if len(parts) < 3:
+        # CPython3.7 and earlier uses ".pyd" on Windows.
+        return _cpython_abis(sys.version_info[:2])
+    soabi = parts[1]
+    if soabi.startswith("cpython"):
+        # non-windows
+        abi = "cp" + soabi.split("-")[1]
+    elif soabi.startswith("cp"):
+        # windows
+        abi = soabi.split("-")[0]
+    elif soabi.startswith("pypy"):
+        abi = "-".join(soabi.split("-")[:2])
+    elif soabi.startswith("graalpy"):
+        abi = "-".join(soabi.split("-")[:3])
+    elif soabi:
+        # pyston, ironpython, others?
+        abi = soabi
+    else:
+        return []
+    return [_normalize_string(abi)]
 
 
 def generic_tags(
