diff --git a/pyperformance/_pythoninfo.py b/pyperformance/_pythoninfo.py
index 977b336..0e61573 100644
--- a/pyperformance/_pythoninfo.py
+++ b/pyperformance/_pythoninfo.py
@@ -96,7 +96,7 @@ def _get_current_info():
         'executable (sys;realpath)': os.path.realpath(sys.executable),
         'prefix (sys)': sys.prefix,
         'exec_prefix (sys)': sys.exec_prefix,
-        'stdlib_dir': os.path.dirname(os.__file__),
+        'stdlib_dir': os.path.dirname(json.__file__),
         'stdlib_dir (sys)': getattr(sys, '_stdlib_dir', None),
         'stdlib_dir (sysconfig)': (sysconfig.get_path('stdlib')
                                    if 'stdlib' in sysconfig.get_path_names()
diff --git a/pyperformance/_utils.py b/pyperformance/_utils.py
index 5126307..5686033 100644
--- a/pyperformance/_utils.py
+++ b/pyperformance/_utils.py
@@ -131,7 +131,8 @@ def run_cmd(argv, *, env=None, capture=None, verbose=True):
 
     # XXX Use a logger.
     if verbose:
-        print('#', cmdstr)
+        import datetime
+        print(datetime.datetime.now().strftime("[%H:%M:%S]"), '#', cmdstr)
 
     # Explicitly flush standard streams, required if streams are buffered
     # (not TTY) to write lines in the expected order
diff --git a/pyperformance/_benchmark.py b/pyperformance/_benchmark.py
index cd51dfe6..516fbbd1 100644
--- a/pyperformance/_benchmark.py
+++ b/pyperformance/_benchmark.py
@@ -252,7 +252,7 @@ def _resolve_restricted_opts(opts):
         if opt.startswith(FLAG + '='):
             idx = i + 1
             resolved.append(FLAG)
-            resolved.append(opt.partition('=')[-2])
+            resolved.append(opt.partition('=')[-1])
             resolved.extend(opts[idx:])
             break
         elif opt == FLAG:
diff --git a/pyperformance/venv.py b/pyperformance/venv.py
index 5a70302..1b67c42 100644
--- a/pyperformance/venv.py
+++ b/pyperformance/venv.py
@@ -7,7 +7,7 @@ from . import _utils, _pip, _venv
 
 
 REQUIREMENTS_FILE = os.path.join(pyperformance.DATA_DIR, 'requirements.txt')
-PYPERF_OPTIONAL = ['psutil']
+PYPERF_OPTIONAL = []
 
 
 class Requirements(object):
