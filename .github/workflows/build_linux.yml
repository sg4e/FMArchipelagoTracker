name: Build for Linux
on: [push, pull_request]
permissions:
  contents: write

jobs:
  build:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      # Checkout your code
      - uses: actions/checkout@v4

      # Set up GraalVM for non-Maven projects
      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Save the value of JAVA_HOME into a file
      - name: Save JAVA_HOME
        run: echo "${{ steps.graalvm.outputs.java-home }}" > java_home.txt

      # Install extra required packages on top of ubuntu-latest
      - name: Install libraries
        run: sudo apt install libasound2-dev libavcodec-dev libavformat-dev libavutil-dev libgl-dev libgtk-3-dev libpango1.0-dev libxtst-dev

      # Create a staging directory where the binary will be copied into
      - name: Make staging directory
        run: mkdir staging

      # Checkout and build the 'substrate' repository
      - name: Checkout substrate repository
        run: git clone https://github.com/sg4e/substrate
      - name: Build and Publish substrate to Maven Local
        run: |
          cd substrate
          gradle publishToMavenLocal

      # Checkout and build the 'gluonfx-maven-plugin' repository
      - name: Checkout gluonfx-maven-plugin repository
        run: git clone https://github.com/sg4e/gluonfx-maven-plugin
      - name: Set up Java 11 for gluonfx-maven-plugin
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Build and Publish gluonfx-maven-plugin to Maven Local
        run: |
          cd gluonfx-maven-plugin
          mvn clean install

      - name: Restore JAVA_HOME
        run: export JAVA_HOME=$(cat java_home.txt)

      # Build your project using Maven with GraalVM
      # The desktop profile is used, which means a native build will be created for the host platform (in this case Linux) itself.
      - name: Gluon Build
        run: mvn gluonfx:build

      # Copy the native binary to the staging directory
      - name: Copy native image to staging
        run: cp -r target/gluonfx/x86_64-linux staging

      # Upload the staging directory as a build artifact. You will be able to download this after the build finishes.
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: linux-x64
          path: staging

